text
nWords <- length(splitUnlist(text))
nWords
find4(text)
finder <- function(text) {
nWords <- length(splitUnlist(text))
if (nWords >= 5) {
start <- length(unlist(strsplit(text, " "))) - 3
end <- length(unlist(strsplit(text, " ")))
text <- toString(unlist(strsplit(text, " "))[start:end])
text <- gsub(",", "", text)
outcome <- find5(text)
}
if (nWords == 4) { outcome <- find5(text) }
if (nWords == 3) { outcome <- find4(text) }
if (nWords == 2) { outcome <- find3(text) }
if (nWords == 3) { outcome <- find2(text) }
return (outcome)
}
finder
finder(text)
outcome <- find4(text)
outcome
finder <- function(text) {
nWords <- length(splitUnlist(text))
if (nWords == 5) {
start <- length(unlist(strsplit(text, " "))) - 3
end <- length(unlist(strsplit(text, " ")))
text <- toString(unlist(strsplit(text, " "))[start:end])
text <- gsub(",", "", text)
outcome <- find5(text)
}
if (nWords == 4) { outcome <- find5(text) }
if (nWords == 3) { outcome <- find4(text) }
if (nWords == 2) { outcome <- find3(text) }
if (nWords == 3) { outcome <- find2(text) }
return (outcome)
}
finder(text)
f <- function(text) {
nWords <- length(splitUnlist(text))
if (nWords == 3) {
outcome <- find4(text)
}
return (outcome)
}
f(text)
f <- function(text) {
nWords <- length(splitUnlist(text))
if (nWords == 4) {
outcome <- find5(text)
}
if (nWords == 3) {
outcome <- find4(text)
}
return (outcome)
}
f(text)
f("i want to go")
f <- function(text) {
nWords <- length(splitUnlist(text))
if (nWords >= 5) {
start <- length(unlist(strsplit(text, " "))) - 3
end <- length(unlist(strsplit(text, " ")))
text <- toString(unlist(strsplit(text, " "))[start:end])
text <- gsub(",", "", text)
outcome <- find5(text)
}
if (nWords == 4) {
outcome <- find5(text)
}
if (nWords == 3) {
outcome <- find4(text)
}
return (outcome)
}
f("i want to go")
f("this is the")
f("look at what")
f("did we have")
f("great job on")
f <- function(text) {
nWords <- length(splitUnlist(text))
if (nWords >= 5) {
start <- length(unlist(strsplit(text, " "))) - 3
end <- length(unlist(strsplit(text, " ")))
text <- toString(unlist(strsplit(text, " "))[start:end])
text <- gsub(",", "", text)
outcome <- find5(text)
}
if (nWords == 4) {
outcome <- find5(text)
}
if (nWords == 3) {
outcome <- find4(text)
}
if (nWords == 2) {
outcome <- find3(text)
}
return (outcome)
}
f("this is")
f("go on a ")
f("go on a")
f("on a")
f("on a cold")
f("a cold")
f("cold")
find2("cold")
f <- function(text) {
nWords <- length(splitUnlist(text))
if (nWords >= 5) {
start <- length(unlist(strsplit(text, " "))) - 3
end <- length(unlist(strsplit(text, " ")))
text <- toString(unlist(strsplit(text, " "))[start:end])
text <- gsub(",", "", text)
outcome <- find5(text)
}
if (nWords == 4) {
outcome <- find5(text)
}
if (nWords == 3) {
outcome <- find4(text)
}
if (nWords == 2) {
outcome <- find3(text)
}
if (nWords == 1) {
outcome <- find2(text)
}
return (outcome)
}
f("hell")
f("cold")
find2("cold")
grep(paste0("^", "cold"), twoDF$twoGrams, value=TRUE)
grep(paste0("cold"), twoDF$twoGrams, value=TRUE)
f("have a")
f("this cant be that")
f("this is really bad")
find5("what is the next")
fiveDF[1:100,]
nrow(fiveDF)
nrow(fourDF)
find4("what is the")
find4("how are you")
find4("let's take a")
find4("lets take a")
find4("please let me")
find4("this is a")
find4("why is this")
find4("good day and")
find4("i found a")
nrow(threeDF)
grep("good", fiveDF, value=TRUE)
grep("good", fiveDF$fiveGrams, value=TRUE)
grep("good", fiveDF$fiveGrams, value=TRUE)[1]
step1 <- grep("good", fiveDF$fiveGrams, value=TRUE)[1]
step1
splitUnlist(step1)
splitUnlist(step1)[2]
splitUnlist(step1)["good"]
grep("good", step1)
grep("a", step1)
step2 <- splitUnlist(step1)
step2
grep("good", step2)
step3 <- grep("good", step2)
step3
step2
step2[step3+1]
step4 <- step2[step3 + 1]
step4
step1
step2
step3
step4
input <- "day"
phrase <- splitUnlist(grep(input, fiveDF$fiveGrams, value=TRUE)[1])
pos <- grep(input, phrase)
word <- phrase[pos+1]
word
input <- "day"
phrase <- splitUnlist(grep(input, fiveDF$fiveGrams, value=TRUE)[2])
pos <- grep(input, phrase)
word <- phrase[pos+1]
word
subset(fiveDF, fiveDF$fiveGrams == "day")
subset(fiveDF, fiveDF$fiveGrams == "this is a great day")
subset(fiveDF, fiveDF$fiveGrams == "this is a great year")
subset(fiveDF, fiveDF$fiveGrams == "this is a good day")
subset(fiveDF, fiveDF$fiveGrams == "good")
subset(fiveDF, fiveDF$Freq > 10)
input <- "the middle"
phrase <- splitUnlist(grep(input, fiveDF$fiveGrams, value=TRUE)[1])
pos <- grep(splitUnlist[2], phrase)
word <- phrase[pos+1]
phrase
pos <- grep(splitUnlist(input)[2], phrase)
pos
word <- phrase[pos+1]
word
input <- "i am"
phrase <- splitUnlist(grep(input, fiveDF$fiveGrams, value=TRUE)[1])
pos <- grep(splitUnlist(input)[2], phrase)
word <- phrase[pos+1]
word
input <- "cant wait to"
phrase <- splitUnlist(grep(input, fiveDF$fiveGrams, value=TRUE)[1])
pos <- grep(splitUnlist(input[3]), phrase)
word <- phrase[pos+1]
word
input <- "cant wait to"
input
phrase <- splitUnlist(grep(input, fiveDF$fiveGrams, value=TRUE)[1])
phrase
pos <- grep(splitUnlist(input[3]), phrase)
pos
pos <- grep(splitUnlist(input)[3], phrase)
pos
word <- phrase[pos+1]
word
input <- "amazing cant wait to"
phrase <- splitUnlist(grep(paste0("^", input), fiveDF$fiveGrams, value=TRUE)[1])
pos <- grep(splitUnlist(input)[5], phrase)
word <- phrase[pos+1]
word
input <- "amazing cant wait to"
input
phrase <- splitUnlist(grep(paste0("^", input), fiveDF$fiveGrams, value=TRUE)[1])
phrase
pos <- grep(splitUnlist(input)[5], phrase)
pos
splitUnlist(input)
pos <- grep(splitUnlist(phrase)[5], phrase)
pos
word <- phrase[pos]
word
}
pos <- grep(splitUnlist(phrase), phrase)
input <- "amazing cant wait to"
phrase <- splitUnlist(grep(paste0("^", input), fiveDF$fiveGrams, value=TRUE)[1])
pos <- grep(splitUnlist(phrase)[4], phrase)
word <- phrase[pos+1]
word
get2 <- function(text) {
phrase <- splitUnlist(grep(text, fiveDF$fiveGrams, value=TRUE)[2])
pos <- grep(text, phrase)
word <- phrase[pos+1]
}
get2("day")
get2 <- function(text) {
phrase <- splitUnlist(grep(text, fiveDF$fiveGrams, value=TRUE)[2])
pos <- grep(text, phrase)
word <- phrase[pos+1]
return (word)
}
get2("day")
get2("great")
get2("find")
get2("look")
get2("get")
get2("come")
grep("come", fiveDF$fiveGrams, value=TRUE)
get2 <- function(text) {
phrase <- splitUnlist(grep(text, fiveDF$fiveGrams, value=TRUE)[1])
pos <- grep(text, phrase)
if (pos == 5) {
phrase <- splitUnlist(grep(text, fiveDF$fiveGrams, value=TRUE)[2])
}
if (pos == 5) {
phrase <- splitUnlist(grep(text, fiveDF$fiveGrams, value=TRUE)[3])
}
word <- phrase[pos+1]
return (word)
}
get2("come")
text <- "come"
phrase <- splitUnlist(grep(text, fiveDF$fiveGrams, value=TRUE)[1])
phrase
pos <- grep(text, phrase)
pos
phrase <- splitUnlist(grep(text, fiveDF$fiveGrams, value=TRUE)[2])
phrase
phrase <- splitUnlist(grep(text, fiveDF$fiveGrams, value=TRUE)[3])
phrase
word <- phrase[pos+1]
word
pos
get2 <- function(text) {
phrase <- splitUnlist(grep(text, fiveDF$fiveGrams, value=TRUE)[1])
pos <- grep(text, phrase)
if (pos == 5) {
phrase <- splitUnlist(grep(text, fiveDF$fiveGrams, value=TRUE)[2])
pos <- grep(text, phrase)
}
if (pos == 5) {
phrase <- splitUnlist(grep(text, fiveDF$fiveGrams, value=TRUE)[3])
pos <- grep(text, phrase)
}
word <- phrase[pos+1]
return (word)
}
get2("come")
get2("help")
get2("let")
get2("great")
get2("go")
get2("fuck")
get2("me")
get2("mean")
get2("statistics")
get2("calculus")
get2("way")
get2("baby")
grep("baby", fiveDF$fiveGrams, value=TRUE)
head(fiveDF)
names
names(fiveDF)
names(fiveDF[2])
names(fiveDF[1])
names(fiveDF[1] = "phrase")
names(fiveDF[1]) = "phrase"
head(fiveDF)
names(fiveDF)
names(fiveDF)[1] = "phrase"
head(fiveDF)
names(fourDF)[1] = "phrase"
names(threeDF)[1] = "phrase"
names(twoDF)[1] = "phrase"
get2 <- function(text) {
phrase <- splitUnlist(grep(text, fiveDF$phrase, value=TRUE)[1])
pos <- grep(text, phrase)
if (pos == 5) {
phrase <- splitUnlist(grep(text, fiveDF$phrase, value=TRUE)[2])
pos <- grep(text, phrase)
}
if (pos == 5) {
phrase <- splitUnlist(grep(text, fiveDF$phrase, value=TRUE)[3])
pos <- grep(text, phrase)
}
word <- phrase[pos+1]
return (word)
}
get2("go")
get2("great")
get2("baby")
get2 <- function(text) {
phrase <- splitUnlist(grep(text, fourDF$phrase, value=TRUE)[1])
pos <- grep(text, phrase)
if (pos == 5) {
phrase <- splitUnlist(grep(text, fourDF$phrase, value=TRUE)[2])
pos <- grep(text, phrase)
}
if (pos == 5) {
phrase <- splitUnlist(grep(text, fourDF$phrase, value=TRUE)[3])
pos <- grep(text, phrase)
}
word <- phrase[pos+1]
return (word)
}
get2("baby")
get2("go")
get2("great")
phrase <- splitUnlist(grep(text, fourDF$phrase, value=TRUE)[1])
phrase
text
text <- go
text <- "go"
phrase <- splitUnlist(grep(text, fourDF$phrase, value=TRUE)[1])
phrase
pos <- grep(text, phrase)
pos
nrow(twoDF)
nrow(threeDF)
nrow(fourDF)
nrow(fiveDF)
get3 <- function(text) {
phrase <- splitUnlist(grep(text, fiveDF$fiveGrams, value=TRUE)[1])
pos <- grep(splitUnlist(input)[2], phrase)
word <- phrase[pos+1]
return (word)
}
get3("go to the")
get3 <- function(text) {
phrase <- splitUnlist(grep(text, fiveDF$phrase, value=TRUE)[1])
pos <- grep(splitUnlist(input)[2], phrase)
word <- phrase[pos+1]
return (word)
}
get3("go to the")
get3 <- function(text) {
phrase <- splitUnlist(grep(text, fourDF$phrase, value=TRUE)[1])
pos <- grep(splitUnlist(input)[2], phrase)
word <- phrase[pos+1]
return (word)
}
get3("go to the")
get3 <- function(text) {
phrase <- splitUnlist(grep(text, threeDF$phrase, value=TRUE)[1])
pos <- grep(splitUnlist(input)[2], phrase)
word <- phrase[pos+1]
return (word)
}
get3("go to the")
grep("go to the", fiveDF$phrase, value=TRUE)
get3("go to")
grep("go to", fiveDF$phrase, value=TRUE)
grep("go to", threeDF$phrase, value=TRUE)
get3 <- function(text) {
phrase <- splitUnlist(grep(text, threeDF$phrase, value=TRUE)[1])
pos <- grep(splitUnlist(input)[2], phrase)
word <- phrase[pos+1]
return (word)
}
get3("go to")
phrase <- splitUnlist(grep(text, threeDF$phrase, value=TRUE)[1])
phrase
text
get3 <- function(text) {
phrase <- splitUnlist(grep(paste0("^", text "$"), threeDF$phrase, value=TRUE)[1])
pos <- grep(splitUnlist(input)[2], phrase)
word <- phrase[pos+1]
return (word)
}
get3 <- function(text) {
phrase <- splitUnlist(grep(paste0("^", text, "$"), threeDF$phrase, value=TRUE)[1])
pos <- grep(splitUnlist(input)[2], phrase)
word <- phrase[pos+1]
return (word)
}
get3("go to")
phrase <- splitUnlist(grep(paste0("^", text, "$"), threeDF$phrase, value=TRUE)[1])
phrase
phrase <- splitUnlist(grep(paste0("^", text), threeDF$phrase, value=TRUE)[1])
phrase
text
text <- "go to"
phrase <- splitUnlist(grep(paste0("^", text), threeDF$phrase, value=TRUE)[1])
phrase
get3 <- function(text) {
phrase <- splitUnlist(grep(paste0("^", text), threeDF$phrase, value=TRUE)[1])
pos <- grep(splitUnlist(input)[2], phrase)
word <- phrase[pos+1]
return (word)
}
get3("go to")
phrase <- splitUnlist(grep(paste0("^", text), threeDF$phrase, value=TRUE)[1])
phrase
pos <- grep(splitUnlist(input)[2], phrase)
pos
get3 <- function(text) {
phrase <- splitUnlist(grep(paste0("^", text), threeDF$phrase, value=TRUE)[1])
pos <- grep(splitUnlist(text)[2], phrase)
word <- phrase[pos+1]
return (word)
}
get3("go to")
get3("find a")
get3("let me")
get3("run to")
get3("this is")
get3("going back")
get3("faster than")
get3("faster now")
get3("faster by")
get3("fast car")
get3("look at")
get3("car in")
get3("streets are")
get3("wind is")
get3("good time")
get3 <- function(text) {
phrase <- splitUnlist(grep(text, threeDF$phrase, value=TRUE)[1])
pos <- grep(splitUnlist(text)[2], phrase)
word <- phrase[pos+1]
return (word)
}
get3("going by")
get3("faster than")
get3("a good")
get3("good time")
get3("great things")
grep("good time", threeDF$phrase, value=TRUE)
get3 <- function(text) {
phrase <- splitUnlist(grep(paste0("^", text), threeDF$phrase, value=TRUE)[1])
pos <- grep(splitUnlist(text)[2], phrase)
word <- phrase[pos+1]
return (word)
}
get3("a good")
get3 <- function(text) {
phrase <- splitUnlist(grep(paste0("^", text), threeDF$phrase, value=TRUE)[2])
pos <- grep(splitUnlist(text)[2], phrase)
word <- phrase[pos+1]
return (word)
}
get3("a good")
get3 <- function(text) {
phrase <- splitUnlist(grep(paste0("^", text), threeDF$phrase, value=TRUE)[3])
pos <- grep(splitUnlist(text)[2], phrase)
word <- phrase[pos+1]
return (word)
}
get3("a good")
get3 <- function(text) {
phrase <- splitUnlist(grep(paste0("^", text), threeDF$phrase, value=TRUE)[4])
pos <- grep(splitUnlist(text)[2], phrase)
word <- phrase[pos+1]
return (word)
}
get3("a good")
